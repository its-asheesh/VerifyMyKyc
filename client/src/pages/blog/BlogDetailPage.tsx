"use client"

import React from "react"
import "../../styles/blog.css"
import { useParams, Link } from "react-router-dom"
import { motion } from "framer-motion"
import { useBlogPost } from "../../hooks/useBlog"

const BlogDetailPage: React.FC = () => {
  const { slug = "" } = useParams()
  const { data, isLoading, isError } = useBlogPost(slug)

  if (isLoading) return <div className="text-center text-gray-600 py-16">Loading post…</div>
  if (isError || !data) return <div className="text-center text-red-600 py-16">Post not found.</div>

  return (
    <article className="py-12 px-4 md:px-8 bg-gray-50 min-h-screen">
      <div className="max-w-3xl mx-auto">
        <div className="mb-6">
          <Link to="/blog" className="text-sm text-blue-600 hover:underline">← Back to Blog</Link>
        </div>
        <motion.h1 initial={{ opacity: 0, y: 10 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.4 }} className="text-3xl md:text-4xl font-bold text-gray-900 mb-3">
          {data.title}
        </motion.h1>
        {/* Meta moved to bottom */}
        {data.coverImage && (
          <img src={data.coverImage} alt={data.title} className="w-full rounded-xl border border-gray-200 mb-6" />
        )}
        {/* Tags moved to bottom */}
        {data.excerpt && (
          <p className="text-gray-700 italic mb-6">{data.excerpt}</p>
        )}
        {/* Render rich HTML content (generated by Admin editor). Add blog-content class as a fallback when Tailwind Typography isn't available. */}
        <div className="prose prose-blue max-w-none blog-content" dangerouslySetInnerHTML={{ __html: data.content }} />

        {/* Bottom meta (tags left, date/author right) */}
        <div className="mt-8 pt-6 border-t border-gray-200">
          <div className="flex flex-col md:flex-row md:items-center md:justify-between gap-3">
            <div className="text-xs text-blue-600 font-medium flex flex-wrap">
              {data.tags?.length ? (
                data.tags.map((t) => (
                  <span key={t} className="mr-2">#{t}</span>
                ))
              ) : null}
            </div>
            <div className="text-sm text-gray-500 flex items-center gap-3 flex-shrink-0">
              <span>{new Date(data.createdAt).toLocaleDateString()}</span>
              {data.author && <span>•</span>}
              {data.author && <span>By {data.author}</span>}
            </div>
          </div>
        </div>
      </div>
    </article>
  )
}

export default BlogDetailPage
